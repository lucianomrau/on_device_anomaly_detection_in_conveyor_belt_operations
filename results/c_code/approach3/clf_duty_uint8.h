


    // !!! This file is generated using emlearn !!!

    #include <eml_trees.h>
    

EmlTreesNode clf_duty_nodes[978] = {
  { 1, 2.8516892655061974, 1, 19 },
  { 5, 1.9123220834472785, 2, 15 },
  { 0, 2.856760682937112, 3, 8 },
  { 3, 1.5818645318885634, 4, 10 },
  { 0, 1.285560169390198, 5, 8 },
  { 4, 1.62462162721186, 6, 9 },
  { 4, 0.8876280337048825, 7, 9 },
  { 2, 0.5317330260443189, 8, 8 },
  { -1, 0, -1, -1 },
  { -1, 1, -1, -1 },
  { 1, 1.4275219759100684, 11, 13 },
  { 2, 2.8778161014792585, 12, 8 },
  { 0, 0.20944428360529443, 8, 9 },
  { 4, 1.993628840424879, 14, 9 },
  { 4, 0.10130490367361573, 9, 9 },
  { 6, 0.7027177641646554, 8, 16 },
  { 8, 0.37898516998579035, 17, 8 },
  { 6, 2.7813649353484458, 18, 9 },
  { 7, 1.3027019627870535, 8, 8 },
  { 4, 0.08220052909208486, 20, 8 },
  { 0, 1.518249496127595, 8, 21 },
  { 3, 0.3926442728343626, 8, 9 },
  { 3, 1.8131194369928536, 23, 31 },
  { 2, 1.150271020899653, 8, 24 },
  { 2, 2.3136512922652304, 25, 27 },
  { 3, 0.12116264883482952, 8, 26 },
  { 0, 1.1704507023889807, 8, 9 },
  { 3, 0.5117354260346552, 28, 30 },
  { 0, 1.2176703094587058, 29, 8 },
  { 4, 0.9372120718179326, 8, 9 },
  { 4, 1.3078672472889847, 9, 9 },
  { 8, 0.43197883359714356, 32, 8 },
  { 6, 0.392322512060554, 33, 41 },
  { 5, 1.783281098018997, 34, 8 },
  { 2, 2.183847246311534, 35, 38 },
  { 0, 1.6651950756391487, 36, 9 },
  { 5, 0.9488351871021256, 8, 37 },
  { 1, 1.8914558947512208, 8, 8 },
  { 4, 2.8049866784387207, 39, 9 },
  { 0, 1.750830657664142, 40, 8 },
  { 4, 0.22781813201858575, 9, 9 },
  { 6, 1.9281441210434513, 42, 9 },
  { 7, 0.7640142993833936, 8, 8 },
  { 0, 1.8081582918801151, 44, 60 },
  { 3, 2.3524772470595674, 45, 59 },
  { 4, 0.8597625563199458, 46, 51 },
  { 3, 0.1882805899662341, 47, 49 },
  { 1, 2.5643582188358334, 48, 8 },
  { 2, 2.222758255537021, 8, 8 },
  { 3, 1.314837505721877, 50, 9 },
  { 1, 2.488228319440143, 9, 8 },
  { 1, 1.4073458199423485, 8, 52 },
  { 5, 1.680085735246579, 53, 56 },
  { 3, 0.9458697805860404, 9, 54 },
  { 3, 1.74647668225061, 9, 55 },
  { 4, 2.778428878531991, 9, 9 },
  { 8, 0.5657593275260923, 57, 8 },
  { 7, 1.3331955863783116, 58, 8 },
  { 6, 2.8548199845733215, 8, 9 },
  { 1, 2.488927930355504, 8, 8 },
  { 0, 2.318102279826115, 61, 8 },
  { 3, 2.9785335645910975, 62, 9 },
  { 3, 0.2525013346469502, 8, 9 },
  { 4, 0.6747090465737083, 64, 72 },
  { 1, 0.43142010477903303, 8, 65 },
  { 2, 2.602743846644994, 66, 69 },
  { 0, 1.1569070369735859, 8, 67 },
  { 1, 1.582561504367069, 8, 68 },
  { 3, 0.8990341932042661, 8, 9 },
  { 0, 1.6983394272152053, 70, 8 },
  { 3, 0.8318954561054219, 8, 71 },
  { 3, 1.4962539041863074, 9, 9 },
  { 2, 2.9473142679535385, 73, 76 },
  { 4, 1.9253353145557155, 8, 74 },
  { 0, 0.6764438490739296, 8, 75 },
  { 1, 1.0611259574355212, 9, 8 },
  { 7, 1.328193775996656, 77, 8 },
  { 5, 0.5146946071249874, 78, 81 },
  { 4, 1.846101659744094, 79, 9 },
  { 1, 1.0100910617085597, 8, 80 },
  { 3, 1.4043653483522895, 9, 9 },
  { 6, 0.03281881941148025, 8, 82 },
  { 6, 2.1600374622084377, 8, 9 },
  { 3, 1.5551451647445305, 84, 92 },
  { 1, 2.8862080340675114, 85, 90 },
  { 2, 1.7608327743414942, 8, 86 },
  { 3, 0.578598736589122, 87, 89 },
  { 1, 1.8102690902586418, 8, 88 },
  { 4, 0.9323244522941878, 8, 9 },
  { 4, 0.07564088985120919, 9, 9 },
  { 3, 0.34458884612870816, 8, 91 },
  { 0, 1.486829139984599, 8, 9 },
  { 4, 1.5224078649293669, 93, 96 },
  { 4, 0.1893690839360324, 9, 94 },
  { 3, 2.4285998271911406, 95, 8 },
  { 1, 1.5211564742592891, 8, 9 },
  { 3, 2.844634707013441, 97, 102 },
  { 6, 1.1154642417633274, 98, 101 },
  { 7, 1.9831183040435978, 99, 8 },
  { 5, 0.3290196090606133, 9, 100 },
  { 6, 0.13247624651178544, 8, 8 },
  { 8, 0.5237870600650958, 9, 8 },
  { 1, 2.337714223814064, 103, 8 },
  { 0, 0.6374531735840501, 8, 9 },
  { 5, 1.0452041453892384, 105, 118 },
  { 1, 2.2563218894676873, 106, 115 },
  { 0, 0.6867926189148764, 107, 108 },
  { 3, 2.092873469038342, 8, 8 },
  { 2, 2.745078345641996, 109, 110 },
  { 2, 1.5799874475132616, 8, 9 },
  { 1, 1.109898872259026, 8, 111 },
  { 4, 2.292378473231745, 112, 9 },
  { 4, 0.5367249783765176, 113, 114 },
  { 3, 0.2525487254618428, 8, 9 },
  { 3, 1.0907044657928424, 9, 9 },
  { 4, 0.3812833299773202, 116, 8 },
  { 0, 1.9211055142437599, 8, 117 },
  { 3, 0.41223954847652444, 8, 9 },
  { 8, 0.6867525427074882, 119, 8 },
  { 6, 0.45574553890886976, 8, 120 },
  { 6, 1.244767039196923, 121, 9 },
  { 7, 1.7191757754046357, 8, 8 },
  { 2, 2.9398521808627303, 123, 131 },
  { 2, 0.6735243297524398, 8, 124 },
  { 4, 0.5611887036642007, 125, 128 },
  { 1, 2.047257374994111, 8, 126 },
  { 0, 1.4032763733543812, 8, 127 },
  { 3, 0.5320101857800084, 8, 9 },
  { 5, 0.6991057548202135, 8, 129 },
  { 1, 2.153868257605409, 130, 8 },
  { 0, 0.26379026112323173, 8, 9 },
  { 1, 1.9657604535882176, 8, 132 },
  { 6, 0.6358658041040719, 133, 139 },
  { 5, 1.553300462455163, 134, 8 },
  { 4, 2.4730262590912293, 135, 9 },
  { 4, 0.4509534744783088, 136, 138 },
  { 3, 1.9833013378005946, 137, 9 },
  { 3, 0.8842053906452867, 8, 9 },
  { 3, 0.06796621441280759, 9, 9 },
  { 8, 0.9318152647147957, 140, 8 },
  { 6, 2.3618781079360645, 141, 9 },
  { 7, 1.6737294419080622, 8, 8 },
  { 4, 0.44589817032492635, 143, 152 },
  { 1, 1.6920219816696, 8, 144 },
  { 0, 1.9928117725033367, 145, 150 },
  { 3, 0.7127191474254798, 146, 148 },
  { 2, 1.739722822671627, 8, 147 },
  { 2, 2.82047071811765, 8, 8 },
  { 3, 1.1617582939387106, 149, 9 },
  { 1, 2.1856185831993904, 9, 8 },
  { 1, 2.652619577782517, 8, 151 },
  { 3, 0.5441284196191134, 8, 9 },
  { 4, 2.6520720672104843, 153, 160 },
  { 5, 0.9102164995438496, 154, 158 },
  { 3, 2.927762450616696, 155, 8 },
  { 0, 2.1471529175281305, 156, 8 },
  { 0, 0.7820797384633122, 8, 157 },
  { 3, 1.1769029252123566, 9, 9 },
  { 1, 2.4745344628926995, 159, 8 },
  { 0, 0.7270434641870872, 8, 9 },
  { 5, 0.9583368939153556, 9, 161 },
  { 6, 0.6119557784925941, 8, 162 },
  { 6, 2.567513315737021, 163, 164 },
  { 7, 0.9505296493650086, 8, 8 },
  { 8, 0.2411844587145301, 9, 8 },
  { 5, 0.36240732966103, 166, 178 },
  { 4, 0.01910761279012431, 167, 174 },
  { 3, 1.343107700042011, 168, 9 },
  { 0, 1.1713646539353602, 169, 173 },
  { 3, 0.24044647032415795, 170, 172 },
  { 1, 2.575231525849193, 171, 8 },
  { 2, 2.9216038193188627, 8, 8 },
  { 1, 2.954284002051821, 9, 8 },
  { 3, 0.7975839859794751, 8, 9 },
  { 1, 1.2604919440394695, 8, 175 },
  { 2, 2.6172160890964866, 8, 176 },
  { 3, 1.923275773377752, 9, 177 },
  { 4, 2.084540017454205, 9, 9 },
  { 3, 2.3274926838127397, 179, 183 },
  { 6, 1.1657428867955426, 180, 182 },
  { 7, 1.453348947434383, 181, 8 },
  { 6, 0.0036666202375975534, 8, 8 },
  { 7, 1.2855714681956785, 9, 8 },
  { 0, 1.9964636610804423, 184, 9 },
  { 1, 1.552921592515391, 8, 8 },
  { 4, 0.4060042954077964, 186, 193 },
  { 1, 2.4609750408963182, 187, 191 },
  { 3, 1.0361522599291766, 188, 9 },
  { 2, 2.044306130169102, 8, 189 },
  { 1, 1.50136491307121, 8, 190 },
  { 3, 0.9934656177616984, 8, 9 },
  { 0, 1.5779487102189793, 8, 192 },
  { 3, 0.6290192052857109, 8, 9 },
  { 5, 1.2174052815965402, 194, 200 },
  { 1, 2.768602052595747, 195, 8 },
  { 1, 1.1844138448054036, 196, 198 },
  { 5, 0.9644809975123411, 8, 197 },
  { 0, 1.191038839142322, 8, 9 },
  { 4, 1.213841218600907, 199, 9 },
  { 3, 1.6657214731284051, 9, 9 },
  { 7, 1.5298287810430995, 201, 8 },
  { 7, 0.36127746541112543, 202, 9 },
  { 6, 0.29496432714861087, 8, 8 },
  { 4, 0.5660667892387448, 204, 213 },
  { 1, 1.2121785032619623, 8, 205 },
  { 3, 1.819462933493528, 206, 9 },
  { 0, 1.642346192450424, 207, 211 },
  { 2, 1.8870830703000925, 8, 208 },
  { 3, 0.7356899621596978, 209, 210 },
  { 1, 2.455883060328608, 8, 8 },
  { 1, 2.466099514843011, 9, 8 },
  { 0, 2.5831892763186195, 212, 8 },
  { 3, 0.07795601434910485, 8, 9 },
  { 3, 2.5789117238386123, 214, 220 },
  { 7, 1.174637383397034, 215, 8 },
  { 7, 0.7408174745462917, 216, 9 },
  { 6, 0.864044063661268, 217, 8 },
  { 3, 1.362492283509342, 9, 218 },
  { 5, 0.48902983893129504, 219, 8 },
  { 0, 2.627089273010888, 9, 8 },
  { 1, 1.245780016410062, 221, 8 },
  { 0, 0.010422592056180626, 8, 9 },
  { 2, 0.16575728317990773, 8, 223 },
  { 1, 2.69087391611695, 224, 235 },
  { 7, 1.0429315450801195, 225, 8 },
  { 2, 1.3750557649764492, 8, 226 },
  { 3, 0.7855375640958256, 227, 229 },
  { 0, 2.6041724940781354, 228, 8 },
  { 4, 0.6979180689425758, 8, 9 },
  { 5, 1.8875566012633762, 230, 233 },
  { 2, 2.589196375845557, 231, 232 },
  { 0, 1.0281344992239654, 8, 9 },
  { 3, 1.757027163057135, 9, 9 },
  { 6, 0.931141537582102, 8, 234 },
  { 7, 0.6090892518912857, 8, 9 },
  { 0, 1.2255497389591996, 8, 236 },
  { 3, 0.8518842001687196, 8, 9 },
  { 3, 0.17871349825463886, 238, 243 },
  { 0, 2.830692272554474, 239, 8 },
  { 4, 0.27695772250972583, 240, 9 },
  { 0, 1.880106577593883, 241, 8 },
  { 2, 0.7290686293174832, 8, 242 },
  { 2, 2.0860667671477735, 8, 8 },
  { 6, 0.8913256073795844, 244, 256 },
  { 5, 0.11485011322184005, 245, 253 },
  { 1, 2.3795937119888113, 246, 251 },
  { 3, 1.7762024671659815, 247, 248 },
  { 4, 0.7181706520347719, 9, 9 },
  { 1, 1.134537857554172, 8, 249 },
  { 4, 2.331221131762127, 250, 9 },
  { 4, 0.14992633748330472, 9, 9 },
  { 4, 0.40065439064086156, 252, 8 },
  { 0, 1.7881313729044663, 8, 9 },
  { 2, 2.7059867511065616, 254, 8 },
  { 1, 1.7826413823210827, 255, 8 },
  { 0, 1.3150461676134944, 8, 9 },
  { 6, 2.26235109626425, 257, 258 },
  { 7, 1.9880853258017848, 8, 8 },
  { 7, 1.3857245507583602, 9, 8 },
  { 2, 0.8942153145997856, 8, 260 },
  { 5, 1.6909428731030518, 261, 275 },
  { 4, 0.1450670287688575, 262, 269 },
  { 1, 1.6800404939241895, 8, 263 },
  { 1, 2.6801093424112112, 264, 267 },
  { 2, 1.2584933900546718, 8, 265 },
  { 3, 0.01998994500375816, 8, 266 },
  { 3, 1.5188502601901304, 9, 9 },
  { 3, 0.2260531374374652, 8, 268 },
  { 0, 1.0883274549098347, 8, 9 },
  { 1, 2.6557515923193433, 270, 8 },
  { 4, 2.9725244641176074, 271, 9 },
  { 2, 2.864575615555316, 272, 273 },
  { 0, 1.3512730027322066, 8, 9 },
  { 0, 0.9195070410703807, 8, 274 },
  { 1, 1.4031224858030316, 8, 9 },
  { 7, 1.69224091604922, 276, 8 },
  { 7, 0.10645037568474672, 277, 9 },
  { 6, 0.49879511888082845, 8, 8 },
  { 6, 0.26510244387439563, 279, 295 },
  { 3, 0.5796762353645992, 280, 284 },
  { 4, 0.6978366950982421, 281, 9 },
  { 0, 1.4338295517646844, 282, 8 },
  { 1, 2.285203335473874, 283, 8 },
  { 2, 1.6366987357086962, 8, 8 },
  { 5, 1.5645295956938199, 285, 8 },
  { 1, 1.4526407338923963, 286, 289 },
  { 0, 2.6393585422259562, 287, 8 },
  { 2, 2.757548997531435, 288, 8 },
  { 0, 1.6842736078818672, 8, 9 },
  { 1, 2.332084470117504, 290, 294 },
  { 3, 1.2263802994165478, 291, 292 },
  { 4, 2.241069379374883, 9, 9 },
  { 4, 2.8879822943769313, 293, 9 },
  { 4, 0.32246019100884915, 9, 9 },
  { 0, 1.06563201829122, 8, 9 },
  { 6, 2.4519631012584844, 296, 297 },
  { 7, 1.6093817099972543, 8, 8 },
  { 7, 1.6032579418286952, 9, 8 },
  { 5, 1.663163921638934, 299, 313 },
  { 2, 0.7941463961238723, 8, 300 },
  { 2, 1.1327823904029943, 8, 301 },
  { 2, 2.2818810447500466, 302, 308 },
  { 4, 1.0299901631800412, 303, 306 },
  { 4, 0.2597525116334448, 304, 8 },
  { 0, 1.4055703349437427, 8, 305 },
  { 3, 0.45157826247232885, 8, 9 },
  { 1, 2.934726212143305, 307, 8 },
  { 0, 0.19493615356969468, 8, 9 },
  { 1, 1.9258235729885398, 8, 309 },
  { 4, 2.5359003243669402, 310, 9 },
  { 3, 1.0513487742521561, 311, 312 },
  { 3, 0.6625347699329884, 8, 9 },
  { 4, 0.7251028752536992, 9, 9 },
  { 8, 0.17444368320258505, 314, 8 },
  { 6, 1.608457367219244, 315, 9 },
  { 6, 0.6920791411269824, 8, 316 },
  { 7, 0.05519096555895683, 8, 8 },
  { 4, 0.5590993936914482, 318, 325 },
  { 2, 1.3752554884996524, 8, 319 },
  { 0, 1.085532176348163, 320, 323 },
  { 1, 2.014506135142644, 321, 8 },
  { 3, 1.5456839192405734, 322, 9 },
  { 3, 0.2596575046235963, 8, 9 },
  { 0, 2.4392074413780156, 324, 8 },
  { 3, 0.5896977170322545, 8, 9 },
  { 5, 0.3476318858320042, 326, 330 },
  { 1, 2.795785648653184, 327, 8 },
  { 1, 1.9482006751690994, 8, 328 },
  { 4, 1.9418776672994147, 329, 9 },
  { 3, 0.41063356139260976, 9, 9 },
  { 2, 2.3583239365175013, 331, 333 },
  { 1, 2.2366313791073074, 332, 8 },
  { 0, 0.635993263049048, 8, 9 },
  { 8, 0.8981221299144077, 334, 8 },
  { 7, 0.3784543696690604, 335, 336 },
  { 6, 0.44413383092923736, 8, 8 },
  { 7, 1.2063751650072518, 9, 8 },
  { 0, 0.5578664352921147, 338, 339 },
  { 2, 2.9222367135445757, 8, 8 },
  { 8, 0.25241525669229, 340, 8 },
  { 4, 0.09575675898033975, 341, 348 },
  { 3, 1.9153019822739539, 342, 9 },
  { 3, 0.2998033302369543, 343, 346 },
  { 2, 1.1941483310396543, 8, 344 },
  { 2, 2.6966694768968362, 8, 345 },
  { 1, 1.2401468442939905, 8, 8 },
  { 2, 2.071621665764424, 347, 9 },
  { 0, 1.722960718312748, 8, 9 },
  { 1, 1.4742076780992597, 349, 350 },
  { 4, 1.9794312585049454, 8, 9 },
  { 5, 0.08572601810364333, 351, 354 },
  { 1, 2.1513387705904146, 352, 8 },
  { 4, 2.4425469559815465, 353, 9 },
  { 3, 1.76467063825795, 9, 9 },
  { 2, 2.6649708243389476, 8, 355 },
  { 6, 0.753850963783381, 8, 356 },
  { 7, 0.3683303084076989, 8, 8 },
  { 1, 2.192339946139762, 358, 373 },
  { 3, 1.6263420770998775, 359, 364 },
  { 0, 2.1352866865393176, 360, 8 },
  { 2, 1.8815236095718684, 8, 361 },
  { 3, 0.08671229709252357, 362, 363 },
  { 4, 0.7232658088781246, 8, 9 },
  { 4, 0.293317352092507, 9, 9 },
  { 1, 1.640778775159632, 365, 367 },
  { 4, 1.643946719190081, 8, 366 },
  { 0, 1.0564134945424337, 8, 9 },
  { 7, 0.7456036483615653, 368, 372 },
  { 4, 2.9877632232325912, 369, 370 },
  { 4, 0.8579471338810153, 9, 9 },
  { 5, 1.0407671067122217, 9, 371 },
  { 6, 0.15806410888119793, 8, 8 },
  { 7, 1.11482740385217, 9, 8 },
  { 0, 1.6275428559759366, 8, 374 },
  { 3, 0.4060128631098256, 8, 9 },
  { 7, 1.4438070577773299, 376, 8 },
  { 3, 0.9894246584686566, 377, 382 },
  { 2, 1.7667513968268183, 8, 378 },
  { 4, 0.6281496596653712, 379, 9 },
  { 0, 2.8970947544542582, 380, 8 },
  { 0, 1.5255896055724425, 381, 8 },
  { 2, 2.3798111716191337, 8, 8 },
  { 0, 0.9417178914610845, 383, 384 },
  { 5, 0.322856914868046, 8, 8 },
  { 4, 0.35167082927733234, 385, 388 },
  { 2, 2.7090554315173323, 386, 387 },
  { 0, 1.6424282624583824, 8, 9 },
  { 3, 1.0219752597724903, 9, 9 },
  { 4, 1.4422791099372687, 389, 391 },
  { 0, 1.225078673206772, 390, 8 },
  { 1, 2.4647046176086667, 9, 8 },
  { 6, 0.23617822967291727, 392, 394 },
  { 3, 1.4235916037222331, 9, 393 },
  { 0, 1.8952170358482827, 8, 9 },
  { 7, 0.26169334457334753, 8, 9 },
  { 2, 1.5880992988069074, 8, 396 },
  { 6, 2.0697335931797203, 397, 413 },
  { 6, 0.49183876276567523, 398, 412 },
  { 2, 2.1800780841987946, 399, 405 },
  { 4, 0.6870356019060293, 400, 402 },
  { 0, 1.9213996664254924, 8, 401 },
  { 3, 0.7163135342841566, 8, 9 },
  { 4, 1.1574787940631988, 8, 403 },
  { 0, 1.0549318236554655, 404, 9 },
  { 1, 1.5754306086224648, 8, 8 },
  { 3, 1.2475587070209713, 406, 409 },
  { 0, 1.6222091580844527, 407, 8 },
  { 4, 1.5282173187137662, 408, 9 },
  { 4, 0.3931557249245959, 9, 9 },
  { 4, 0.006388164128357621, 9, 410 },
  { 0, 2.834113926083834, 411, 8 },
  { 4, 2.9360266085416202, 9, 8 },
  { 7, 1.158111576530203, 8, 8 },
  { 7, 1.2076788727229828, 9, 8 },
  { 3, 1.4344004227008673, 415, 423 },
  { 4, 0.6803890027480148, 416, 9 },
  { 1, 2.3260222381567686, 417, 421 },
  { 1, 0.6209806663081892, 8, 418 },
  { 2, 1.3349484067107311, 8, 419 },
  { 0, 2.777681386926063, 420, 8 },
  { 3, 0.8387381443002905, 8, 9 },
  { 3, 0.11587973829166952, 8, 422 },
  { 0, 1.7256664418269259, 8, 9 },
  { 3, 2.9530143392984822, 424, 432 },
  { 1, 1.381498385398415, 8, 425 },
  { 5, 0.4315216189397134, 426, 428 },
  { 4, 0.785489844524064, 9, 427 },
  { 4, 1.418021457464444, 9, 9 },
  { 6, 1.506574400936521, 429, 431 },
  { 7, 1.290942868818968, 430, 8 },
  { 6, 0.4826130929787704, 8, 8 },
  { 7, 1.5118468606434048, 9, 8 },
  { 4, 1.6660333735244504, 8, 433 },
  { 0, 1.662946477375434, 434, 9 },
  { 0, 0.6549945271830049, 8, 8 },
  { 3, 0.21643611798828288, 436, 439 },
  { 2, 2.8093716389543246, 8, 437 },
  { 1, 1.2486073273460414, 8, 438 },
  { 4, 0.9792312765397277, 8, 9 },
  { 3, 2.9329246878311617, 440, 453 },
  { 4, 0.28449621902988115, 441, 444 },
  { 1, 2.6765057075193646, 442, 443 },
  { 3, 1.7457674242303556, 9, 9 },
  { 0, 1.415373846150643, 8, 9 },
  { 4, 1.7605711346308568, 445, 447 },
  { 0, 0.16831629498317666, 8, 446 },
  { 0, 2.504082430854478, 9, 8 },
  { 3, 1.1056751590714209, 9, 448 },
  { 7, 0.39796570148224275, 449, 451 },
  { 6, 0.03798017186949969, 450, 8 },
  { 5, 0.43815547248262704, 9, 8 },
  { 6, 2.5159213484804708, 8, 452 },
  { 7, 1.9329379787356302, 9, 8 },
  { 4, 1.8700784234656385, 8, 454 },
  { 1, 1.939830753458585, 455, 8 },
  { 0, 0.9810394714498145, 8, 9 },
  { 0, 1.3016728126917374, 457, 469 },
  { 2, 1.6663197263452783, 8, 458 },
  { 8, 0.9022206565841198, 459, 8 },
  { 5, 1.3890518822656255, 460, 466 },
  { 3, 2.6978482756288016, 461, 465 },
  { 0, 0.6634549971965398, 8, 462 },
  { 3, 1.5856696151130225, 463, 464 },
  { 2, 2.1859418108062547, 8, 9 },
  { 4, 2.9887762237287947, 9, 9 },
  { 1, 2.785045866754393, 8, 8 },
  { 6, 0.7509759193058013, 8, 467 },
  { 6, 2.1792479907997175, 468, 9 },
  { 7, 0.6964542123938232, 8, 8 },
  { 2, 0.8755136960537703, 8, 470 },
  { 3, 2.808610439211414, 471, 9 },
  { 1, 2.6843926327696037, 8, 472 },
  { 3, 0.9966980544834855, 8, 9 },
  { 3, 0.19800532013084987, 474, 477 },
  { 2, 2.0673659933113333, 8, 475 },
  { 0, 2.120091668851716, 476, 8 },
  { 4, 0.8154907765870405, 8, 9 },
  { 1, 2.918798847086168, 478, 489 },
  { 6, 2.712246405758078, 479, 488 },
  { 4, 1.3539614925877943, 480, 484 },
  { 4, 0.38834043237769067, 481, 482 },
  { 3, 1.47864817570832, 9, 9 },
  { 0, 0.9131293249843313, 8, 483 },
  { 0, 1.7039822753071703, 9, 8 },
  { 6, 0.4002079159953668, 485, 487 },
  { 0, 0.5597595575078202, 8, 486 },
  { 5, 1.6804621534796722, 9, 8 },
  { 7, 0.5289744578902491, 8, 8 },
  { 7, 1.1815836286086512, 9, 8 },
  { 0, 1.309882596745101, 8, 9 },
  { 5, 0.5355887033676676, 491, 506 },
  { 2, 0.23817293263886727, 8, 492 },
  { 4, 0.9737122417305187, 493, 501 },
  { 1, 1.3209546442706859, 8, 494 },
  { 3, 1.1412955900380832, 495, 9 },
  { 0, 1.2811730412213005, 496, 499 },
  { 3, 0.19852883284843006, 497, 498 },
  { 1, 2.448431368194721, 8, 8 },
  { 2, 2.1822163719601075, 8, 9 },
  { 1, 2.908729869364169, 8, 500 },
  { 3, 0.20804007733615118, 8, 9 },
  { 0, 2.755136162859917, 502, 8 },
  { 2, 2.4651146072266226, 8, 503 },
  { 4, 2.407264799534932, 504, 9 },
  { 1, 1.1640016148630536, 8, 505 },
  { 3, 1.275365159509408, 9, 9 },
  { 2, 2.733662226113333, 507, 509 },
  { 0, 1.639273518528451, 508, 9 },
  { 1, 1.1304790722813824, 8, 8 },
  { 8, 0.6862969513453063, 510, 8 },
  { 7, 0.00857004430544099, 511, 512 },
  { 6, 0.8884566025289039, 8, 8 },
  { 7, 1.3378525606067164, 9, 8 },
  { 1, 2.009629840501412, 514, 525 },
  { 2, 1.2272021594583997, 8, 515 },
  { 6, 2.94829784936658, 516, 524 },
  { 0, 0.754188828521496, 517, 518 },
  { 3, 2.829720599031877, 8, 8 },
  { 6, 0.8325157062301951, 519, 523 },
  { 0, 2.643969123085946, 520, 8 },
  { 5, 0.8747419309219076, 521, 522 },
  { 3, 0.14787280380161144, 8, 9 },
  { 5, 1.0144453980095895, 9, 8 },
  { 7, 1.704276214216033, 8, 8 },
  { 8, 0.605639670791868, 9, 8 },
  { 0, 1.742144332612932, 8, 526 },
  { 3, 0.6738396415830774, 8, 9 },
  { 8, 0.3302473702143167, 528, 8 },
  { 3, 0.8725809030572795, 529, 533 },
  { 2, 1.4068151015820052, 8, 530 },
  { 1, 1.3764889512101601, 8, 531 },
  { 1, 2.765638904536906, 532, 8 },
  { 4, 0.8678289292696066, 8, 9 },
  { 4, 0.9069659928358001, 534, 537 },
  { 3, 1.4624051090620482, 535, 9 },
  { 1, 2.593892319870131, 9, 536 },
  { 0, 1.8622185009821406, 8, 9 },
  { 6, 2.095420999962567, 538, 9 },
  { 5, 1.7151070468663736, 539, 544 },
  { 2, 2.7968229617908706, 540, 542 },
  { 0, 0.26917720691728275, 8, 541 },
  { 1, 1.8086183577816088, 9, 8 },
  { 4, 2.8208517245114093, 543, 9 },
  { 0, 1.8912835409358533, 9, 8 },
  { 6, 0.032241763562076614, 8, 545 },
  { 7, 0.6536904976953243, 8, 8 },
  { 5, 0.10414129779866957, 547, 558 },
  { 2, 1.7473743770957806, 8, 548 },
  { 2, 2.415399351816345, 549, 552 },
  { 3, 1.1406931458696226, 550, 8 },
  { 3, 0.15494987841460384, 8, 551 },
  { 0, 1.6085531486238134, 8, 9 },
  { 1, 1.621011784123728, 8, 553 },
  { 4, 2.9818600583737065, 554, 9 },
  { 4, 0.17598439388721454, 555, 557 },
  { 3, 0.4864032736450449, 8, 556 },
  { 3, 1.3224763494555263, 9, 9 },
  { 3, 0.24147214192965633, 9, 9 },
  { 0, 1.5257494810622882, 559, 9 },
  { 6, 2.1714327373408864, 560, 564 },
  { 3, 2.973152734326735, 561, 563 },
  { 7, 0.20561701813974279, 562, 8 },
  { 6, 0.44284882323949076, 8, 8 },
  { 0, 0.10165199549014307, 8, 8 },
  { 7, 1.8107189483990516, 9, 8 },
  { 3, 0.28682815390025646, 566, 570 },
  { 4, 0.16179668165827016, 567, 9 },
  { 0, 1.0850659432285772, 568, 8 },
  { 1, 2.088215941138666, 569, 8 },
  { 2, 1.4806043424087596, 8, 8 },
  { 5, 1.1303929254088518, 571, 581 },
  { 1, 2.007284876428211, 572, 579 },
  { 0, 1.359119265973158, 573, 578 },
  { 4, 2.931732480382422, 574, 9 },
  { 4, 0.24329972557877177, 575, 576 },
  { 3, 1.5348573697427554, 9, 9 },
  { 1, 1.9168386850118817, 577, 9 },
  { 3, 2.295068898841305, 8, 8 },
  { 0, 2.928347002681506, 9, 8 },
  { 3, 2.4134264930213924, 580, 8 },
  { 0, 1.7603730260209987, 8, 9 },
  { 7, 0.4574504180147547, 582, 583 },
  { 6, 0.9908483042339088, 8, 8 },
  { 8, 0.38265175250482364, 584, 8 },
  { 6, 1.727514915507061, 8, 9 },
  { 5, 1.279658798724254, 586, 603 },
  { 0, 0.14916095563637138, 587, 588 },
  { 2, 2.9727268214210527, 8, 8 },
  { 0, 1.6955767193322893, 589, 599 },
  { 3, 1.7455678618259578, 590, 596 },
  { 2, 1.0384671362296058, 8, 591 },
  { 3, 0.20181946326131908, 592, 594 },
  { 4, 0.7882493402754186, 593, 9 },
  { 1, 2.186642662708947, 8, 8 },
  { 1, 2.74524938536121, 595, 8 },
  { 4, 2.5385327979636068, 9, 9 },
  { 3, 2.986369278741241, 597, 8 },
  { 4, 2.7410798970335537, 598, 9 },
  { 4, 0.9153117974825724, 9, 9 },
  { 1, 2.5560463390108414, 600, 602 },
  { 0, 2.4556784641256924, 601, 8 },
  { 4, 0.24270326376087184, 8, 9 },
  { 3, 0.5251642346964982, 8, 9 },
  { 7, 1.1187201594555378, 604, 8 },
  { 7, 0.7787844337424191, 605, 9 },
  { 6, 0.5220308986129383, 8, 8 },
  { 2, 2.998043525497449, 607, 614 },
  { 2, 0.21325598201400414, 8, 608 },
  { 0, 1.3809258096762587, 609, 612 },
  { 2, 1.4897275858045218, 8, 610 },
  { 4, 0.5741730735516981, 8, 611 },
  { 0, 0.49839272838942367, 8, 8 },
  { 3, 0.3678783356993824, 8, 613 },
  { 4, 0.4672871122450042, 9, 9 },
  { 4, 1.796147482840413, 615, 621 },
  { 3, 0.04435379712113822, 616, 618 },
  { 0, 2.021530597946388, 617, 8 },
  { 4, 0.8440613745916921, 8, 9 },
  { 1, 1.3888163559086697, 8, 619 },
  { 4, 0.47823738142765937, 620, 9 },
  { 3, 1.1453676531768253, 9, 9 },
  { 3, 1.5086004289372825, 9, 622 },
  { 8, 0.31885011834970217, 623, 8 },
  { 5, 1.6077488360962593, 9, 624 },
  { 7, 0.223074290073977, 625, 626 },
  { 6, 0.6510806501149575, 8, 8 },
  { 7, 1.958332014716385, 9, 8 },
  { 7, 0.9387386128952441, 628, 647 },
  { 3, 1.4834669607148818, 629, 637 },
  { 3, 0.14482246718593988, 630, 634 },
  { 0, 1.3715207652987544, 631, 8 },
  { 1, 2.3686281300003773, 632, 8 },
  { 4, 0.9958857903237854, 633, 9 },
  { 2, 1.0350196943781431, 8, 8 },
  { 1, 2.3029477052869964, 635, 636 },
  { 4, 1.777498040244681, 9, 9 },
  { 0, 1.2030694169006633, 8, 9 },
  { 5, 1.3866739652057523, 638, 646 },
  { 0, 2.097679910295494, 639, 8 },
  { 0, 0.7953084422253577, 640, 641 },
  { 4, 1.2805856155606852, 8, 8 },
  { 4, 1.6062882312602775, 642, 644 },
  { 2, 2.4589678204892986, 8, 643 },
  { 4, 0.7663979389548292, 9, 9 },
  { 4, 2.181753208479729, 645, 9 },
  { 1, 1.0847876929141524, 9, 8 },
  { 6, 0.5655374194334901, 8, 8 },
  { 8, 0.4349996477528474, 648, 8 },
  { 6, 2.437772695644653, 8, 9 },
  { 7, 1.8607862358264562, 650, 8 },
  { 4, 1.4940938421031897, 651, 664 },
  { 4, 0.5768018172014513, 652, 660 },
  { 0, 1.2761092624981465, 653, 658 },
  { 3, 0.12660267582470675, 654, 656 },
  { 1, 2.1444061119781836, 655, 8 },
  { 2, 1.6726365311409517, 8, 8 },
  { 3, 1.700387752941059, 657, 9 },
  { 2, 2.9059959388831613, 8, 9 },
  { 0, 2.686649972427008, 659, 8 },
  { 3, 0.2618792048943598, 8, 9 },
  { 0, 1.0950971921417383, 661, 8 },
  { 2, 2.48033481020496, 8, 662 },
  { 1, 1.4541653322308163, 8, 663 },
  { 3, 1.925031895714361, 9, 9 },
  { 4, 2.5366686775985494, 665, 667 },
  { 0, 1.9834995055494362, 666, 9 },
  { 0, 0.7103494348518314, 8, 8 },
  { 7, 0.4287946808285986, 668, 9 },
  { 6, 0.5934616628072512, 669, 8 },
  { 5, 1.172233011188094, 9, 8 },
  { 7, 0.9988033925177545, 671, 688 },
  { 5, 0.6056723774437198, 672, 684 },
  { 1, 1.271930146157709, 8, 673 },
  { 3, 0.08097355164632833, 674, 678 },
  { 4, 0.7763704763615367, 675, 9 },
  { 0, 1.1245876877217496, 676, 8 },
  { 1, 2.249232005909659, 677, 8 },
  { 2, 1.5989026010962681, 8, 8 },
  { 2, 2.672381514996468, 679, 681 },
  { 4, 0.4546606584706626, 680, 8 },
  { 0, 1.1085028062148499, 8, 9 },
  { 4, 0.9061265466297634, 682, 683 },
  { 3, 1.8038181466068226, 9, 9 },
  { 4, 1.9291717768316956, 9, 9 },
  { 6, 0.12496673321582691, 685, 8 },
  { 0, 1.9526748442801996, 686, 9 },
  { 5, 1.350490282918555, 687, 8 },
  { 0, 0.8702608737490424, 8, 8 },
  { 6, 1.2850438720942678, 8, 689 },
  { 8, 0.45376646912366453, 9, 8 },
  { 6, 0.1753400727991667, 691, 705 },
  { 3, 0.7731874290728883, 692, 696 },
  { 4, 0.2346513435405918, 693, 9 },
  { 2, 0.5435912606975023, 8, 694 },
  { 0, 2.8051343885274296, 695, 8 },
  { 2, 2.3078183686862785, 8, 8 },
  { 1, 2.687068627070202, 697, 704 },
  { 3, 1.5329136925437086, 698, 699 },
  { 4, 1.4392398751523532, 9, 9 },
  { 0, 0.9321999665965326, 700, 701 },
  { 4, 1.1277499823494581, 8, 8 },
  { 2, 2.9167544729620007, 9, 702 },
  { 0, 2.6406952485631665, 703, 8 },
  { 5, 0.7787465270509695, 9, 8 },
  { 0, 1.9807708458885416, 8, 9 },
  { 8, 0.01981993532731195, 706, 8 },
  { 7, 1.4392395780604517, 707, 8 },
  { 6, 2.602167964727696, 8, 9 },
  { 3, 2.9672586838562314, 709, 728 },
  { 5, 0.6684880129380562, 710, 724 },
  { 3, 0.12835570989565723, 711, 716 },
  { 4, 0.6977213023685483, 712, 9 },
  { 0, 2.3206449827741107, 713, 8 },
  { 0, 1.4873928327520345, 714, 8 },
  { 1, 2.822253620634905, 715, 8 },
  { 2, 0.5802659148258464, 8, 8 },
  { 4, 0.0022103791135411614, 717, 720 },
  { 3, 1.2637624644039955, 718, 9 },
  { 2, 2.8282563555185947, 719, 9 },
  { 0, 1.729123337533848, 8, 9 },
  { 3, 1.1565087703785435, 9, 721 },
  { 4, 2.415316463175843, 722, 9 },
  { 0, 2.4276508947031807, 723, 8 },
  { 0, 0.8946536029198456, 8, 9 },
  { 8, 0.06696356510136442, 725, 8 },
  { 7, 0.5803279218172319, 726, 727 },
  { 6, 0.9086661757476004, 8, 8 },
  { 6, 2.4031271102852783, 8, 9 },
  { 0, 0.4249132966738722, 8, 729 },
  { 0, 1.2145041102611014, 8, 9 },
  { 4, 0.08169185560275422, 731, 738 },
  { 1, 1.8424344197113227, 8, 732 },
  { 3, 0.9862416624027498, 733, 735 },
  { 0, 2.5882569707875405, 734, 8 },
  { 2, 2.6932219107138096, 8, 8 },
  { 1, 2.1987409024493494, 736, 737 },
  { 3, 1.8109914836524945, 9, 9 },
  { 0, 1.2582632737505544, 8, 9 },
  { 1, 2.7116361752672287, 739, 8 },
  { 4, 2.26914597920568, 740, 745 },
  { 3, 1.5108886195863078, 9, 741 },
  { 5, 0.339249905356788, 742, 744 },
  { 0, 2.232272157088049, 743, 8 },
  { 1, 1.839907888714181, 8, 9 },
  { 0, 1.416368902389132, 8, 9 },
  { 6, 1.8051198701398075, 746, 749 },
  { 5, 0.7292365248916841, 9, 747 },
  { 6, 0.567213922071836, 8, 748 },
  { 7, 0.5197614629379295, 8, 8 },
  { 8, 0.6602076672297938, 9, 8 },
  { 1, 1.7038779154903618, 751, 754 },
  { 4, 0.6703728654749566, 8, 752 },
  { 5, 0.5822469715877655, 8, 753 },
  { 0, 1.238777325134155, 8, 9 },
  { 1, 2.789170979423994, 755, 765 },
  { 7, 0.17271018688227524, 756, 764 },
  { 5, 1.320032029096052, 757, 763 },
  { 3, 1.9675096776185137, 758, 761 },
  { 4, 2.902381769801668, 759, 9 },
  { 4, 0.19238101374003153, 760, 9 },
  { 0, 1.7460725888358768, 8, 8 },
  { 4, 0.8265658220399943, 9, 762 },
  { 4, 1.9825897631154348, 9, 9 },
  { 6, 0.4042734147069386, 8, 8 },
  { 7, 1.9331369641856928, 9, 8 },
  { 0, 1.1513643852208575, 8, 766 },
  { 3, 0.6568658517938414, 8, 9 },
  { 2, 2.126253168623081, 768, 775 },
  { 4, 0.14512918616883885, 769, 773 },
  { 0, 1.9008641936354638, 8, 770 },
  { 0, 2.8209847015426424, 771, 8 },
  { 2, 0.7098840673965794, 8, 772 },
  { 3, 0.5542299340265943, 8, 9 },
  { 0, 0.722020337694334, 8, 774 },
  { 1, 1.7627945564514, 9, 8 },
  { 4, 2.755829097589398, 776, 782 },
  { 3, 0.36100488824816646, 777, 779 },
  { 1, 1.838650376460818, 8, 778 },
  { 4, 0.5230913681551308, 8, 9 },
  { 3, 1.0421635173457504, 9, 780 },
  { 4, 0.19589926637518185, 9, 781 },
  { 1, 1.1071802857831028, 8, 9 },
  { 7, 0.12133835541146731, 783, 786 },
  { 6, 0.020253770528479372, 784, 8 },
  { 3, 1.0737571199768023, 9, 785 },
  { 5, 1.8136992956575468, 9, 8 },
  { 6, 1.4873978740011333, 8, 787 },
  { 7, 1.6525539735576855, 9, 8 },
  { 5, 0.5415021314013294, 789, 801 },
  { 1, 0.9703329866613881, 8, 790 },
  { 4, 2.646200130994525, 791, 9 },
  { 3, 2.8241962598749417, 792, 8 },
  { 1, 2.6483453622312965, 793, 799 },
  { 4, 0.6216763554241864, 794, 797 },
  { 3, 0.7726987585298245, 795, 796 },
  { 1, 1.3993784507733669, 8, 8 },
  { 3, 1.0489673316706751, 9, 9 },
  { 0, 2.2158047502002702, 798, 8 },
  { 0, 0.6967167354639232, 8, 9 },
  { 0, 1.774159915174432, 8, 800 },
  { 3, 0.8034658398495362, 8, 9 },
  { 5, 1.4745730569002093, 802, 804 },
  { 1, 1.4278271293397187, 803, 8 },
  { 0, 0.26472499978948616, 8, 9 },
  { 6, 0.8554241782312394, 8, 805 },
  { 7, 0.5402927447763703, 8, 806 },
  { 7, 1.668397304913214, 9, 8 },
  { 4, 0.20004415800797015, 808, 815 },
  { 3, 1.9174314252647717, 809, 9 },
  { 2, 1.4299688210850436, 8, 810 },
  { 1, 1.6388909018779598, 8, 811 },
  { 3, 0.444928336164415, 812, 813 },
  { 1, 2.9048402551118473, 8, 8 },
  { 2, 2.5760475818887576, 814, 9 },
  { 0, 1.8249708208371749, 8, 9 },
  { 4, 2.8500590593787187, 816, 822 },
  { 1, 2.642272470352367, 817, 8 },
  { 3, 2.1781500099125086, 818, 821 },
  { 3, 1.4799646807275548, 9, 819 },
  { 0, 1.8766982848181848, 820, 8 },
  { 1, 1.3429507852266314, 8, 9 },
  { 0, 1.7837588562554487, 8, 9 },
  { 7, 1.886397860891371, 823, 8 },
  { 6, 2.614062404080323, 824, 9 },
  { 6, 0.8728881910782718, 825, 8 },
  { 3, 1.996136468833376, 9, 826 },
  { 5, 0.15677671607433666, 9, 8 },
  { 4, 2.1317501590269385, 828, 841 },
  { 5, 0.39728540805973367, 829, 839 },
  { 0, 2.0734910858205944, 830, 8 },
  { 4, 0.9096164116215038, 831, 836 },
  { 2, 1.3857553631000945, 8, 832 },
  { 3, 0.5923167767898724, 833, 834 },
  { 1, 2.6467456150086344, 8, 8 },
  { 0, 1.1332387277545588, 835, 9 },
  { 3, 1.8758509000185182, 8, 9 },
  { 3, 1.0088983997744034, 9, 837 },
  { 0, 0.9151135985344246, 8, 838 },
  { 3, 2.8132155043134537, 9, 8 },
  { 1, 1.5736151768703084, 840, 8 },
  { 0, 0.5774666688300049, 8, 9 },
  { 5, 1.2630426004822564, 9, 842 },
  { 7, 0.24701184604643464, 843, 844 },
  { 6, 0.9648775495425228, 8, 8 },
  { 8, 0.7964545440843582, 845, 8 },
  { 6, 1.7866735164014034, 8, 9 },
  { 4, 2.2035493907535213, 847, 859 },
  { 2, 2.3610469607454942, 848, 854 },
  { 4, 0.20828462681187532, 849, 851 },
  { 3, 0.36331024689754016, 8, 850 },
  { 0, 1.3478879078048691, 8, 9 },
  { 4, 1.2029024992151662, 8, 852 },
  { 0, 1.1422964973106497, 853, 9 },
  { 1, 2.160170410368671, 8, 8 },
  { 1, 1.5717513191382175, 8, 855 },
  { 3, 0.5643684419637399, 856, 857 },
  { 4, 0.330598389418143, 8, 9 },
  { 4, 0.9649584023118757, 858, 9 },
  { 3, 1.8660968867438366, 9, 9 },
  { 3, 1.7939808134892865, 9, 860 },
  { 5, 1.977078163985665, 9, 861 },
  { 8, 0.527664398088895, 862, 8 },
  { 7, 0.505645775471649, 863, 864 },
  { 6, 0.6536720956925638, 8, 8 },
  { 6, 2.2884146735483846, 8, 9 },
  { 1, 2.061022877721592, 866, 880 },
  { 6, 2.2923698678111517, 867, 879 },
  { 2, 0.7760443225391416, 8, 868 },
  { 3, 0.6812879842153229, 869, 872 },
  { 4, 0.43819721668874717, 870, 9 },
  { 2, 1.6462268962740092, 8, 871 },
  { 0, 2.6751286311424938, 8, 8 },
  { 4, 0.03646856268703405, 873, 874 },
  { 3, 1.1131974133258673, 9, 9 },
  { 0, 1.379813688984054, 875, 878 },
  { 6, 0.3718090445603286, 876, 877 },
  { 0, 0.6621806759676806, 8, 9 },
  { 7, 0.787293466174646, 8, 8 },
  { 4, 1.0270320060788802, 8, 9 },
  { 7, 1.6783984730385235, 9, 8 },
  { 5, 0.5656969191346769, 881, 8 },
  { 3, 0.4639357367828189, 8, 882 },
  { 0, 1.3577448042844165, 8, 9 },
  { 2, 2.6677159679437596, 884, 890 },
  { 4, 0.7975420229125498, 885, 887 },
  { 3, 0.7628362652672623, 8, 886 },
  { 0, 1.5966948040745663, 8, 9 },
  { 0, 0.32613471817510886, 8, 888 },
  { 4, 1.6034996791759037, 8, 889 },
  { 0, 1.390855588666562, 8, 9 },
  { 4, 2.0719543714411346, 891, 896 },
  { 1, 1.5979878067029585, 8, 892 },
  { 3, 1.9084756448438744, 893, 895 },
  { 3, 0.3672610704634623, 894, 9 },
  { 4, 0.7209611584995692, 8, 9 },
  { 4, 0.8665846054752285, 9, 9 },
  { 6, 1.9336249944444863, 897, 900 },
  { 5, 1.6403009750136643, 9, 898 },
  { 6, 0.5001834675204864, 8, 899 },
  { 7, 0.8821413586298662, 8, 8 },
  { 7, 1.0835806918719693, 9, 8 },
  { 5, 0.34330291782659617, 902, 914 },
  { 1, 1.9281183955856218, 8, 903 },
  { 0, 1.7896635731634047, 904, 912 },
  { 4, 0.24200757091958428, 905, 908 },
  { 2, 2.5513898104202886, 8, 906 },
  { 3, 0.07603444255703802, 8, 907 },
  { 3, 1.772366780216045, 9, 9 },
  { 3, 2.1760310466289665, 909, 8 },
  { 3, 0.16668939225687152, 9, 910 },
  { 3, 1.6134005042786712, 9, 911 },
  { 4, 1.0417178664550735, 9, 9 },
  { 1, 2.805442951063366, 8, 913 },
  { 3, 0.8941779783434132, 8, 9 },
  { 3, 2.672660682663629, 915, 919 },
  { 8, 0.7240059649217901, 916, 8 },
  { 6, 2.6898374546737585, 917, 9 },
  { 6, 0.9944038148943353, 8, 918 },
  { 7, 1.616331754073655, 8, 8 },
  { 0, 1.6413669416873562, 920, 9 },
  { 0, 0.9492873009058123, 8, 8 },
  { 4, 1.0741011295812675, 922, 932 },
  { 2, 1.4083205905781688, 8, 923 },
  { 2, 2.551201101183519, 924, 927 },
  { 3, 1.7722621153910934, 925, 8 },
  { 3, 0.856258498437823, 8, 926 },
  { 0, 1.0594111802333086, 8, 9 },
  { 1, 1.1697499613136753, 8, 928 },
  { 4, 0.7542881405699478, 929, 931 },
  { 3, 1.544689356137388, 930, 9 },
  { 3, 0.6805388171600825, 8, 9 },
  { 3, 1.6094031732573189, 9, 9 },
  { 3, 1.7336822053108747, 9, 933 },
  { 3, 2.069595669894291, 934, 939 },
  { 6, 1.2830675664744655, 935, 938 },
  { 6, 0.10977898822621396, 936, 937 },
  { 5, 1.5452366003511644, 9, 8 },
  { 7, 1.5427098886774433, 8, 8 },
  { 7, 1.551459171600388, 9, 8 },
  { 0, 1.0046870312675307, 940, 9 },
  { 1, 2.2709784029382183, 8, 8 },
  { 3, 0.07100630368618588, 942, 946 },
  { 1, 2.25993543270041, 943, 8 },
  { 2, 2.8555579887961775, 8, 944 },
  { 4, 0.34355239493006484, 945, 9 },
  { 1, 1.4616501258973265, 8, 8 },
  { 4, 2.584566968765374, 947, 955 },
  { 2, 2.8598022935259166, 948, 952 },
  { 0, 1.2355440693141633, 949, 951 },
  { 4, 1.1075873175205604, 8, 950 },
  { 1, 2.103318652651887, 8, 8 },
  { 3, 1.7468355795120987, 9, 9 },
  { 3, 1.0178050999612571, 9, 953 },
  { 1, 1.0522459452283783, 8, 954 },
  { 4, 0.21115184538585685, 9, 9 },
  { 5, 1.5122072116994332, 9, 956 },
  { 7, 0.21250113947899135, 957, 958 },
  { 6, 0.9414632534335662, 8, 8 },
  { 7, 1.2382262885748532, 9, 8 },
  { 1, 2.5277752790263737, 960, 975 },
  { 5, 1.4452934914479467, 961, 971 },
  { 3, 2.847244393940663, 962, 970 },
  { 4, 2.740879320884533, 963, 9 },
  { 3, 0.13813680975611173, 964, 967 },
  { 1, 0.6338034545228832, 8, 965 },
  { 2, 0.4670199684179481, 8, 966 },
  { 4, 0.9353617592413732, 8, 9 },
  { 1, 1.5462957180786392, 8, 968 },
  { 4, 0.2842121344451849, 969, 9 },
  { 3, 1.3699134380416542, 9, 9 },
  { 0, 1.7315656504275116, 8, 9 },
  { 8, 0.33997625687158495, 972, 8 },
  { 7, 1.3909232865045422, 973, 8 },
  { 6, 2.766252055655351, 974, 9 },
  { 6, 0.14461242460860518, 8, 8 },
  { 3, 2.715775980481774, 976, 8 },
  { 3, 0.6915994839238, 8, 977 },
  { 0, 1.5132380521452231, 8, 9 } 
};

int32_t clf_duty_tree_roots[50] = { 0, 22, 43, 63, 83, 104, 122, 142, 165, 185, 203, 222, 237, 259, 278, 298, 317, 337, 357, 375, 395, 414, 435, 456, 473, 490, 513, 527, 546, 565, 585, 606, 627, 649, 670, 690, 708, 730, 750, 767, 788, 807, 827, 846, 865, 883, 901, 921, 941, 959 };

EmlTrees clf_duty = {
        978,
        clf_duty_nodes,	  
        50,
        clf_duty_tree_roots,
    };

static inline int32_t clf_duty_tree_0(const uint8_t *features, int32_t features_length) {
          if (features[1] < 2) {
              if (features[5] < 1) {
                  if (features[0] < 2) {
                      if (features[3] < 1) {
                          if (features[0] < 1) {
                              if (features[4] < 1) {
                                  if (features[4] < 0) {
                                      if (features[2] < 0) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[1] < 1) {
                              if (features[2] < 2) {
                                  if (features[0] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[4] < 1) {
                                  if (features[4] < 0) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[6] < 0) {
                      return 0;
                  } else {
                      if (features[8] < 0) {
                          if (features[6] < 2) {
                              if (features[7] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[4] < 0) {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_1(const uint8_t *features, int32_t features_length) {
          if (features[3] < 1) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[2] < 2) {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[3] < 0) {
                          if (features[0] < 1) {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[4] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[8] < 0) {
                  if (features[6] < 0) {
                      if (features[5] < 1) {
                          if (features[2] < 2) {
                              if (features[0] < 1) {
                                  if (features[5] < 0) {
                                      return 0;
                                  } else {
                                      if (features[1] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[4] < 2) {
                                  if (features[0] < 1) {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[6] < 1) {
                          if (features[7] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_2(const uint8_t *features, int32_t features_length) {
          if (features[0] < 1) {
              if (features[3] < 2) {
                  if (features[4] < 0) {
                      if (features[3] < 0) {
                          if (features[1] < 2) {
                              if (features[2] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[3] < 1) {
                              if (features[1] < 2) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[5] < 1) {
                              if (features[3] < 0) {
                                  return 1;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      if (features[4] < 2) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              if (features[8] < 0) {
                                  if (features[7] < 1) {
                                      if (features[6] < 2) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          }
                      }
                  }
              } else {
                  if (features[1] < 2) {
                      return 0;
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[0] < 2) {
                  if (features[3] < 2) {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 1;
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_3(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[1] < 0) {
                  return 0;
              } else {
                  if (features[2] < 2) {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      if (features[0] < 1) {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[2] < 2) {
                  if (features[4] < 1) {
                      return 0;
                  } else {
                      if (features[0] < 0) {
                          return 0;
                      } else {
                          if (features[1] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              } else {
                  if (features[7] < 1) {
                      if (features[5] < 0) {
                          if (features[4] < 1) {
                              if (features[1] < 1) {
                                  return 0;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              if (features[6] < 2) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_4(const uint8_t *features, int32_t features_length) {
          if (features[3] < 1) {
              if (features[1] < 2) {
                  if (features[2] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          if (features[4] < 0) {
                              return 1;
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              if (features[4] < 1) {
                  if (features[4] < 0) {
                      return 1;
                  } else {
                      if (features[3] < 2) {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[3] < 2) {
                      if (features[6] < 1) {
                          if (features[7] < 1) {
                              if (features[5] < 0) {
                                  return 1;
                              } else {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[8] < 0) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_5(const uint8_t *features, int32_t features_length) {
          if (features[5] < 1) {
              if (features[1] < 2) {
                  if (features[0] < 0) {
                      if (features[3] < 2) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[2] < 2) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[4] < 2) {
                                  if (features[4] < 0) {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              } else {
                  if (features[4] < 0) {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[8] < 0) {
                  if (features[6] < 0) {
                      return 0;
                  } else {
                      if (features[6] < 1) {
                          if (features[7] < 1) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_6(const uint8_t *features, int32_t features_length) {
          if (features[2] < 2) {
              if (features[2] < 0) {
                  return 0;
              } else {
                  if (features[4] < 0) {
                      if (features[1] < 2) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      if (features[5] < 0) {
                          return 0;
                      } else {
                          if (features[1] < 2) {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  }
              }
          } else {
              if (features[1] < 1) {
                  return 0;
              } else {
                  if (features[6] < 0) {
                      if (features[5] < 1) {
                          if (features[4] < 2) {
                              if (features[4] < 0) {
                                  if (features[3] < 1) {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[3] < 0) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[8] < 0) {
                          if (features[6] < 2) {
                              if (features[7] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_7(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[1] < 1) {
                  return 0;
              } else {
                  if (features[0] < 1) {
                      if (features[3] < 0) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              if (features[2] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[3] < 1) {
                              if (features[1] < 2) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[1] < 2) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[4] < 2) {
                  if (features[5] < 0) {
                      if (features[3] < 2) {
                          if (features[0] < 2) {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[5] < 0) {
                      return 1;
                  } else {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          if (features[6] < 2) {
                              if (features[7] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[8] < 0) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_8(const uint8_t *features, int32_t features_length) {
          if (features[5] < 0) {
              if (features[4] < 0) {
                  if (features[3] < 1) {
                      if (features[0] < 1) {
                          if (features[3] < 0) {
                              if (features[1] < 2) {
                                  if (features[2] < 2) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[1] < 2) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 1;
                  }
              } else {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[2] < 2) {
                          return 0;
                      } else {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[4] < 2) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              }
          } else {
              if (features[3] < 2) {
                  if (features[6] < 1) {
                      if (features[7] < 1) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[0] < 1) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_9(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[1] < 2) {
                  if (features[3] < 1) {
                      if (features[2] < 2) {
                          return 0;
                      } else {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 1;
                  }
              } else {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              if (features[5] < 1) {
                  if (features[1] < 2) {
                      if (features[1] < 1) {
                          if (features[5] < 0) {
                              return 0;
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          if (features[4] < 1) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[7] < 1) {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_10(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[1] < 1) {
                  return 0;
              } else {
                  if (features[3] < 1) {
                      if (features[0] < 1) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  if (features[1] < 2) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  if (features[1] < 2) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          if (features[0] < 2) {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      return 1;
                  }
              }
          } else {
              if (features[3] < 2) {
                  if (features[7] < 1) {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  if (features[5] < 0) {
                                      if (features[0] < 2) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[1] < 1) {
                      if (features[0] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_11(const uint8_t *features, int32_t features_length) {
          if (features[2] < 0) {
              return 0;
          } else {
              if (features[1] < 2) {
                  if (features[7] < 1) {
                      if (features[2] < 1) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              if (features[0] < 2) {
                                  if (features[4] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[5] < 1) {
                                  if (features[2] < 2) {
                                      if (features[0] < 1) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      if (features[7] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_12(const uint8_t *features, int32_t features_length) {
          if (features[3] < 0) {
              if (features[0] < 2) {
                  if (features[4] < 0) {
                      if (features[0] < 1) {
                          if (features[2] < 0) {
                              return 0;
                          } else {
                              if (features[2] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              } else {
                  return 0;
              }
          } else {
              if (features[6] < 0) {
                  if (features[5] < 0) {
                      if (features[1] < 2) {
                          if (features[3] < 1) {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[1] < 1) {
                                  return 0;
                              } else {
                                  if (features[4] < 2) {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          if (features[4] < 0) {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[2] < 2) {
                          if (features[1] < 1) {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[6] < 2) {
                      if (features[7] < 1) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_13(const uint8_t *features, int32_t features_length) {
          if (features[2] < 0) {
              return 0;
          } else {
              if (features[5] < 1) {
                  if (features[4] < 0) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[1] < 2) {
                              if (features[2] < 1) {
                                  return 0;
                              } else {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[4] < 2) {
                              if (features[2] < 2) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[0] < 0) {
                                      return 0;
                                  } else {
                                      if (features[1] < 1) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[7] < 1) {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_14(const uint8_t *features, int32_t features_length) {
          if (features[6] < 0) {
              if (features[3] < 0) {
                  if (features[4] < 0) {
                      if (features[0] < 1) {
                          if (features[1] < 2) {
                              if (features[2] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              } else {
                  if (features[5] < 1) {
                      if (features[1] < 1) {
                          if (features[0] < 2) {
                              if (features[2] < 2) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[1] < 2) {
                              if (features[3] < 1) {
                                  if (features[4] < 2) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[4] < 2) {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[6] < 2) {
                  if (features[7] < 1) {
                      return 0;
                  } else {
                      return 0;
                  }
              } else {
                  if (features[7] < 1) {
                      return 1;
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_15(const uint8_t *features, int32_t features_length) {
          if (features[5] < 1) {
              if (features[2] < 0) {
                  return 0;
              } else {
                  if (features[2] < 1) {
                      return 0;
                  } else {
                      if (features[2] < 2) {
                          if (features[4] < 1) {
                              if (features[4] < 0) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[1] < 2) {
                                  if (features[0] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[4] < 2) {
                                  if (features[3] < 1) {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              }
          } else {
              if (features[8] < 0) {
                  if (features[6] < 1) {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          if (features[7] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      return 1;
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_16(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[0] < 1) {
                      if (features[1] < 2) {
                          if (features[3] < 1) {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[0] < 2) {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[5] < 0) {
                  if (features[1] < 2) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 1) {
                              if (features[3] < 0) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[2] < 2) {
                      if (features[1] < 2) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[8] < 0) {
                          if (features[7] < 0) {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[7] < 1) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_17(const uint8_t *features, int32_t features_length) {
          if (features[0] < 0) {
              if (features[2] < 2) {
                  return 0;
              } else {
                  return 0;
              }
          } else {
              if (features[8] < 0) {
                  if (features[4] < 0) {
                      if (features[3] < 1) {
                          if (features[3] < 0) {
                              if (features[2] < 1) {
                                  return 0;
                              } else {
                                  if (features[2] < 2) {
                                      return 0;
                                  } else {
                                      if (features[1] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  }
                              }
                          } else {
                              if (features[2] < 2) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      if (features[1] < 1) {
                          if (features[4] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[5] < 0) {
                              if (features[1] < 2) {
                                  if (features[4] < 2) {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[2] < 2) {
                                  return 0;
                              } else {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      if (features[7] < 0) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  }
                              }
                          }
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_18(const uint8_t *features, int32_t features_length) {
          if (features[1] < 2) {
              if (features[3] < 1) {
                  if (features[0] < 2) {
                      if (features[2] < 1) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[1] < 1) {
                      if (features[4] < 1) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[7] < 0) {
                          if (features[4] < 2) {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[5] < 1) {
                                  return 1;
                              } else {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              }
          } else {
              if (features[0] < 1) {
                  return 0;
              } else {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_19(const uint8_t *features, int32_t features_length) {
          if (features[7] < 1) {
              if (features[3] < 0) {
                  if (features[2] < 1) {
                      return 0;
                  } else {
                      if (features[4] < 0) {
                          if (features[0] < 2) {
                              if (features[0] < 1) {
                                  if (features[2] < 2) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              } else {
                  if (features[0] < 0) {
                      if (features[5] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[4] < 0) {
                          if (features[2] < 2) {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          if (features[4] < 1) {
                              if (features[0] < 1) {
                                  if (features[1] < 2) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[6] < 0) {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      if (features[0] < 1) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[7] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      }
                  }
              }
          } else {
              return 0;
          }
        }
        

static inline int32_t clf_duty_tree_20(const uint8_t *features, int32_t features_length) {
          if (features[2] < 1) {
              return 0;
          } else {
              if (features[6] < 2) {
                  if (features[6] < 0) {
                      if (features[2] < 2) {
                          if (features[4] < 0) {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              if (features[4] < 1) {
                                  return 0;
                              } else {
                                  if (features[0] < 1) {
                                      if (features[1] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          if (features[3] < 1) {
                              if (features[0] < 1) {
                                  if (features[4] < 1) {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  if (features[0] < 2) {
                                      if (features[4] < 2) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      }
                  } else {
                      if (features[7] < 1) {
                          return 0;
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[7] < 1) {
                      return 1;
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_21(const uint8_t *features, int32_t features_length) {
          if (features[3] < 1) {
              if (features[4] < 0) {
                  if (features[1] < 2) {
                      if (features[1] < 0) {
                          return 0;
                      } else {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              if (features[0] < 2) {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          }
                      }
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  return 1;
              }
          } else {
              if (features[3] < 2) {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[5] < 0) {
                          if (features[4] < 0) {
                              return 1;
                          } else {
                              if (features[4] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          if (features[6] < 1) {
                              if (features[7] < 1) {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[7] < 1) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  }
              } else {
                  if (features[4] < 1) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_22(const uint8_t *features, int32_t features_length) {
          if (features[3] < 0) {
              if (features[2] < 2) {
                  return 0;
              } else {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[4] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              if (features[3] < 2) {
                  if (features[4] < 0) {
                      if (features[1] < 2) {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[4] < 1) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              if (features[0] < 2) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[7] < 0) {
                                  if (features[6] < 0) {
                                      if (features[5] < 0) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  if (features[6] < 2) {
                                      return 0;
                                  } else {
                                      if (features[7] < 1) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  }
                              }
                          }
                      }
                  }
              } else {
                  if (features[4] < 1) {
                      return 0;
                  } else {
                      if (features[1] < 1) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_23(const uint8_t *features, int32_t features_length) {
          if (features[0] < 1) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[8] < 0) {
                      if (features[5] < 1) {
                          if (features[3] < 2) {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  if (features[3] < 1) {
                                      if (features[2] < 2) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[4] < 2) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              if (features[1] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              if (features[6] < 2) {
                                  if (features[7] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[2] < 0) {
                  return 0;
              } else {
                  if (features[3] < 2) {
                      if (features[1] < 2) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_24(const uint8_t *features, int32_t features_length) {
          if (features[3] < 0) {
              if (features[2] < 2) {
                  return 0;
              } else {
                  if (features[0] < 2) {
                      if (features[4] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[1] < 2) {
                  if (features[6] < 2) {
                      if (features[4] < 1) {
                          if (features[4] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  if (features[0] < 1) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          if (features[6] < 0) {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  if (features[5] < 1) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              if (features[7] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_25(const uint8_t *features, int32_t features_length) {
          if (features[5] < 0) {
              if (features[2] < 0) {
                  return 0;
              } else {
                  if (features[4] < 0) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[3] < 1) {
                              if (features[0] < 1) {
                                  if (features[3] < 0) {
                                      if (features[1] < 2) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      if (features[2] < 2) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[1] < 2) {
                                      return 0;
                                  } else {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[0] < 2) {
                          if (features[2] < 2) {
                              return 0;
                          } else {
                              if (features[4] < 2) {
                                  if (features[1] < 1) {
                                      return 0;
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[2] < 2) {
                  if (features[0] < 1) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              } else {
                  if (features[8] < 0) {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_26(const uint8_t *features, int32_t features_length) {
          if (features[1] < 2) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[6] < 2) {
                      if (features[0] < 0) {
                          if (features[3] < 2) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[6] < 0) {
                              if (features[0] < 2) {
                                  if (features[5] < 0) {
                                      if (features[3] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[5] < 1) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[7] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  } else {
                      if (features[8] < 0) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[0] < 1) {
                  return 0;
              } else {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_27(const uint8_t *features, int32_t features_length) {
          if (features[8] < 0) {
              if (features[3] < 0) {
                  if (features[2] < 1) {
                      return 0;
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[1] < 2) {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  }
              } else {
                  if (features[4] < 0) {
                      if (features[3] < 1) {
                          if (features[1] < 2) {
                              return 1;
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      if (features[6] < 2) {
                          if (features[5] < 1) {
                              if (features[2] < 2) {
                                  if (features[0] < 0) {
                                      return 0;
                                  } else {
                                      if (features[1] < 1) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  }
                              } else {
                                  if (features[4] < 2) {
                                      if (features[0] < 1) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  if (features[7] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              return 0;
          }
        }
        

static inline int32_t clf_duty_tree_28(const uint8_t *features, int32_t features_length) {
          if (features[5] < 0) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[2] < 2) {
                      if (features[3] < 1) {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 2) {
                              if (features[4] < 0) {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[3] < 0) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[0] < 1) {
                  if (features[6] < 2) {
                      if (features[3] < 2) {
                          if (features[7] < 0) {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              } else {
                  return 1;
              }
          }
        }
        

static inline int32_t clf_duty_tree_29(const uint8_t *features, int32_t features_length) {
          if (features[3] < 0) {
              if (features[4] < 0) {
                  if (features[0] < 1) {
                      if (features[1] < 2) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      return 0;
                  }
              } else {
                  return 1;
              }
          } else {
              if (features[5] < 1) {
                  if (features[1] < 2) {
                      if (features[0] < 1) {
                          if (features[4] < 2) {
                              if (features[4] < 0) {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[1] < 1) {
                                      if (features[3] < 2) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[0] < 2) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[3] < 2) {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[7] < 0) {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[8] < 0) {
                          if (features[6] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_30(const uint8_t *features, int32_t features_length) {
          if (features[5] < 1) {
              if (features[0] < 0) {
                  if (features[2] < 2) {
                      return 0;
                  } else {
                      return 0;
                  }
              } else {
                  if (features[0] < 1) {
                      if (features[3] < 1) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  if (features[4] < 0) {
                                      if (features[1] < 2) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[1] < 2) {
                                      if (features[4] < 2) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          if (features[3] < 2) {
                              if (features[4] < 2) {
                                  if (features[4] < 0) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[0] < 2) {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[7] < 1) {
                  if (features[7] < 0) {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_31(const uint8_t *features, int32_t features_length) {
          if (features[2] < 2) {
              if (features[2] < 0) {
                  return 0;
              } else {
                  if (features[0] < 1) {
                      if (features[2] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 0) {
                              return 0;
                          } else {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          if (features[4] < 0) {
                              return 1;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[4] < 1) {
                  if (features[3] < 0) {
                      if (features[0] < 2) {
                          if (features[4] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  if (features[3] < 1) {
                      return 1;
                  } else {
                      if (features[8] < 0) {
                          if (features[5] < 1) {
                              return 1;
                          } else {
                              if (features[7] < 0) {
                                  if (features[6] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  if (features[7] < 1) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_32(const uint8_t *features, int32_t features_length) {
          if (features[7] < 0) {
              if (features[3] < 1) {
                  if (features[3] < 0) {
                      if (features[0] < 1) {
                          if (features[1] < 2) {
                              if (features[4] < 0) {
                                  if (features[2] < 1) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[4] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  if (features[5] < 1) {
                      if (features[0] < 2) {
                          if (features[0] < 0) {
                              if (features[4] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[4] < 1) {
                                  if (features[2] < 2) {
                                      return 0;
                                  } else {
                                      if (features[4] < 0) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[4] < 2) {
                                      if (features[1] < 1) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[8] < 0) {
                  if (features[6] < 2) {
                      return 0;
                  } else {
                      return 1;
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_33(const uint8_t *features, int32_t features_length) {
          if (features[7] < 1) {
              if (features[4] < 1) {
                  if (features[4] < 0) {
                      if (features[0] < 1) {
                          if (features[3] < 0) {
                              if (features[1] < 2) {
                                  if (features[2] < 1) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[3] < 1) {
                                  if (features[2] < 2) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          if (features[0] < 2) {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[0] < 1) {
                          if (features[2] < 2) {
                              return 0;
                          } else {
                              if (features[1] < 1) {
                                  return 0;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[4] < 2) {
                      if (features[0] < 1) {
                          if (features[0] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              if (features[5] < 1) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              return 0;
          }
        }
        

static inline int32_t clf_duty_tree_34(const uint8_t *features, int32_t features_length) {
          if (features[7] < 0) {
              if (features[5] < 0) {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          if (features[4] < 0) {
                              if (features[0] < 1) {
                                  if (features[1] < 2) {
                                      if (features[2] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[2] < 2) {
                              if (features[4] < 0) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[4] < 0) {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  if (features[4] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      }
                  }
              } else {
                  if (features[6] < 0) {
                      if (features[0] < 1) {
                          if (features[5] < 1) {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[6] < 1) {
                  return 0;
              } else {
                  if (features[8] < 0) {
                      return 1;
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_35(const uint8_t *features, int32_t features_length) {
          if (features[6] < 0) {
              if (features[3] < 0) {
                  if (features[4] < 0) {
                      if (features[2] < 0) {
                          return 0;
                      } else {
                          if (features[0] < 2) {
                              if (features[2] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      return 1;
                  }
              } else {
                  if (features[1] < 2) {
                      if (features[3] < 1) {
                          if (features[4] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[0] < 0) {
                              if (features[4] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[2] < 2) {
                                  return 1;
                              } else {
                                  if (features[0] < 2) {
                                      if (features[5] < 0) {
                                          return 1;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      }
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              if (features[8] < 0) {
                  if (features[7] < 1) {
                      if (features[6] < 2) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_36(const uint8_t *features, int32_t features_length) {
          if (features[3] < 2) {
              if (features[5] < 0) {
                  if (features[3] < 0) {
                      if (features[4] < 0) {
                          if (features[0] < 2) {
                              if (features[0] < 1) {
                                  if (features[1] < 2) {
                                      if (features[2] < 0) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      if (features[4] < 0) {
                          if (features[3] < 1) {
                              if (features[2] < 2) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[4] < 2) {
                                  if (features[0] < 2) {
                                      if (features[0] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              } else {
                  if (features[8] < 0) {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[6] < 2) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[0] < 0) {
                  return 0;
              } else {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_37(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[1] < 1) {
                  return 0;
              } else {
                  if (features[3] < 0) {
                      if (features[0] < 2) {
                          if (features[2] < 2) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 2) {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[1] < 2) {
                  if (features[4] < 2) {
                      if (features[3] < 1) {
                          return 1;
                      } else {
                          if (features[5] < 0) {
                              if (features[0] < 2) {
                                  if (features[1] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  } else {
                      if (features[6] < 1) {
                          if (features[5] < 0) {
                              return 1;
                          } else {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  if (features[7] < 0) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      } else {
                          if (features[8] < 0) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_38(const uint8_t *features, int32_t features_length) {
          if (features[1] < 1) {
              if (features[4] < 0) {
                  return 0;
              } else {
                  if (features[5] < 0) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          } else {
              if (features[1] < 2) {
                  if (features[7] < 0) {
                      if (features[5] < 1) {
                          if (features[3] < 1) {
                              if (features[4] < 2) {
                                  if (features[4] < 0) {
                                      if (features[0] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  if (features[4] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_39(const uint8_t *features, int32_t features_length) {
          if (features[2] < 2) {
              if (features[4] < 0) {
                  if (features[0] < 1) {
                      return 0;
                  } else {
                      if (features[0] < 2) {
                          if (features[2] < 0) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              } else {
                  if (features[0] < 0) {
                      return 0;
                  } else {
                      if (features[1] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              }
          } else {
              if (features[4] < 2) {
                  if (features[3] < 0) {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[3] < 1) {
                          return 1;
                      } else {
                          if (features[4] < 0) {
                              return 1;
                          } else {
                              if (features[1] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              } else {
                  if (features[7] < 0) {
                      if (features[6] < 0) {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[5] < 1) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[6] < 1) {
                          return 0;
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_40(const uint8_t *features, int32_t features_length) {
          if (features[5] < 0) {
              if (features[1] < 0) {
                  return 0;
              } else {
                  if (features[4] < 2) {
                      if (features[3] < 2) {
                          if (features[1] < 2) {
                              if (features[4] < 0) {
                                  if (features[3] < 0) {
                                      if (features[1] < 1) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  } else {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              } else {
                                  if (features[0] < 2) {
                                      if (features[0] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              }
          } else {
              if (features[5] < 1) {
                  if (features[1] < 1) {
                      if (features[0] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[6] < 0) {
                      return 0;
                  } else {
                      if (features[7] < 0) {
                          return 0;
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_41(const uint8_t *features, int32_t features_length) {
          if (features[4] < 0) {
              if (features[3] < 1) {
                  if (features[2] < 1) {
                      return 0;
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              if (features[1] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[2] < 2) {
                                  if (features[0] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              } else {
                  return 1;
              }
          } else {
              if (features[4] < 2) {
                  if (features[1] < 2) {
                      if (features[3] < 2) {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[0] < 1) {
                                  if (features[1] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[7] < 1) {
                      if (features[6] < 2) {
                          if (features[6] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  if (features[5] < 0) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_42(const uint8_t *features, int32_t features_length) {
          if (features[4] < 2) {
              if (features[5] < 0) {
                  if (features[0] < 2) {
                      if (features[4] < 0) {
                          if (features[2] < 1) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  if (features[1] < 2) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              } else {
                                  if (features[0] < 1) {
                                      if (features[3] < 1) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              if (features[0] < 0) {
                                  return 0;
                              } else {
                                  if (features[3] < 2) {
                                      return 1;
                                  } else {
                                      return 0;
                                  }
                              }
                          }
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[1] < 1) {
                      if (features[0] < 0) {
                          return 0;
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[5] < 1) {
                  return 1;
              } else {
                  if (features[7] < 0) {
                      if (features[6] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[8] < 0) {
                          if (features[6] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_43(const uint8_t *features, int32_t features_length) {
          if (features[4] < 2) {
              if (features[2] < 2) {
                  if (features[4] < 0) {
                      if (features[3] < 0) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[4] < 1) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              if (features[1] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          if (features[4] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[4] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[3] < 1) {
                  return 1;
              } else {
                  if (features[5] < 1) {
                      return 1;
                  } else {
                      if (features[8] < 0) {
                          if (features[7] < 0) {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[6] < 2) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_44(const uint8_t *features, int32_t features_length) {
          if (features[1] < 2) {
              if (features[6] < 2) {
                  if (features[2] < 0) {
                      return 0;
                  } else {
                      if (features[3] < 0) {
                          if (features[4] < 0) {
                              if (features[2] < 1) {
                                  return 0;
                              } else {
                                  if (features[0] < 2) {
                                      return 0;
                                  } else {
                                      return 0;
                                  }
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[4] < 0) {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[0] < 1) {
                                  if (features[6] < 0) {
                                      if (features[0] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      if (features[7] < 0) {
                                          return 0;
                                      } else {
                                          return 0;
                                      }
                                  }
                              } else {
                                  if (features[4] < 1) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      }
                  }
              } else {
                  if (features[7] < 1) {
                      return 1;
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[5] < 0) {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

static inline int32_t clf_duty_tree_45(const uint8_t *features, int32_t features_length) {
          if (features[2] < 2) {
              if (features[4] < 0) {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              } else {
                  if (features[0] < 0) {
                      return 0;
                  } else {
                      if (features[4] < 1) {
                          return 0;
                      } else {
                          if (features[0] < 1) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[4] < 2) {
                  if (features[1] < 1) {
                      return 0;
                  } else {
                      if (features[3] < 1) {
                          if (features[3] < 0) {
                              if (features[4] < 0) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          if (features[4] < 0) {
                              return 1;
                          } else {
                              return 1;
                          }
                      }
                  }
              } else {
                  if (features[6] < 1) {
                      if (features[5] < 1) {
                          return 1;
                      } else {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              if (features[7] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      }
                  } else {
                      if (features[7] < 1) {
                          return 1;
                      } else {
                          return 0;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_46(const uint8_t *features, int32_t features_length) {
          if (features[5] < 0) {
              if (features[1] < 1) {
                  return 0;
              } else {
                  if (features[0] < 1) {
                      if (features[4] < 0) {
                          if (features[2] < 2) {
                              return 0;
                          } else {
                              if (features[3] < 0) {
                                  return 0;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          if (features[3] < 2) {
                              if (features[3] < 0) {
                                  return 1;
                              } else {
                                  if (features[3] < 1) {
                                      return 1;
                                  } else {
                                      if (features[4] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[1] < 2) {
                          return 0;
                      } else {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              return 1;
                          }
                      }
                  }
              }
          } else {
              if (features[3] < 2) {
                  if (features[8] < 0) {
                      if (features[6] < 2) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              if (features[7] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      return 0;
                  }
              } else {
                  if (features[0] < 1) {
                      if (features[0] < 0) {
                          return 0;
                      } else {
                          return 0;
                      }
                  } else {
                      return 1;
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_47(const uint8_t *features, int32_t features_length) {
          if (features[4] < 1) {
              if (features[2] < 1) {
                  return 0;
              } else {
                  if (features[2] < 2) {
                      if (features[3] < 1) {
                          if (features[3] < 0) {
                              return 0;
                          } else {
                              if (features[0] < 1) {
                                  return 0;
                              } else {
                                  return 1;
                              }
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      if (features[1] < 1) {
                          return 0;
                      } else {
                          if (features[4] < 0) {
                              if (features[3] < 1) {
                                  if (features[3] < 0) {
                                      return 0;
                                  } else {
                                      return 1;
                                  }
                              } else {
                                  return 1;
                              }
                          } else {
                              if (features[3] < 1) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              }
          } else {
              if (features[3] < 1) {
                  return 1;
              } else {
                  if (features[3] < 2) {
                      if (features[6] < 1) {
                          if (features[6] < 0) {
                              if (features[5] < 1) {
                                  return 1;
                              } else {
                                  return 0;
                              }
                          } else {
                              if (features[7] < 1) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  } else {
                      if (features[0] < 1) {
                          if (features[1] < 2) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_48(const uint8_t *features, int32_t features_length) {
          if (features[3] < 0) {
              if (features[1] < 2) {
                  if (features[2] < 2) {
                      return 0;
                  } else {
                      if (features[4] < 0) {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          } else {
              if (features[4] < 2) {
                  if (features[2] < 2) {
                      if (features[0] < 1) {
                          if (features[4] < 1) {
                              return 0;
                          } else {
                              if (features[1] < 2) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          }
                      } else {
                          if (features[3] < 1) {
                              return 1;
                          } else {
                              return 1;
                          }
                      }
                  } else {
                      if (features[3] < 1) {
                          return 1;
                      } else {
                          if (features[1] < 1) {
                              return 0;
                          } else {
                              if (features[4] < 0) {
                                  return 1;
                              } else {
                                  return 1;
                              }
                          }
                      }
                  }
              } else {
                  if (features[5] < 1) {
                      return 1;
                  } else {
                      if (features[7] < 0) {
                          if (features[6] < 0) {
                              return 0;
                          } else {
                              return 0;
                          }
                      } else {
                          if (features[7] < 1) {
                              return 1;
                          } else {
                              return 0;
                          }
                      }
                  }
              }
          }
        }
        

static inline int32_t clf_duty_tree_49(const uint8_t *features, int32_t features_length) {
          if (features[1] < 2) {
              if (features[5] < 1) {
                  if (features[3] < 2) {
                      if (features[4] < 2) {
                          if (features[3] < 0) {
                              if (features[1] < 0) {
                                  return 0;
                              } else {
                                  if (features[2] < 0) {
                                      return 0;
                                  } else {
                                      if (features[4] < 0) {
                                          return 0;
                                      } else {
                                          return 1;
                                      }
                                  }
                              }
                          } else {
                              if (features[1] < 1) {
                                  return 0;
                              } else {
                                  if (features[4] < 0) {
                                      if (features[3] < 1) {
                                          return 1;
                                      } else {
                                          return 1;
                                      }
                                  } else {
                                      return 1;
                                  }
                              }
                          }
                      } else {
                          return 1;
                      }
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              } else {
                  if (features[8] < 0) {
                      if (features[7] < 1) {
                          if (features[6] < 2) {
                              if (features[6] < 0) {
                                  return 0;
                              } else {
                                  return 0;
                              }
                          } else {
                              return 1;
                          }
                      } else {
                          return 0;
                      }
                  } else {
                      return 0;
                  }
              }
          } else {
              if (features[3] < 2) {
                  if (features[3] < 0) {
                      return 0;
                  } else {
                      if (features[0] < 1) {
                          return 0;
                      } else {
                          return 1;
                      }
                  }
              } else {
                  return 0;
              }
          }
        }
        

int32_t clf_duty_predict(const uint8_t *features, int32_t features_length) {

        int32_t votes[2] = {0,};
        int32_t _class = -1;

        _class = clf_duty_tree_0(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_1(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_2(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_3(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_4(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_5(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_6(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_7(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_8(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_9(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_10(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_11(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_12(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_13(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_14(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_15(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_16(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_17(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_18(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_19(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_20(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_21(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_22(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_23(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_24(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_25(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_26(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_27(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_28(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_29(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_30(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_31(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_32(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_33(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_34(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_35(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_36(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_37(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_38(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_39(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_40(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_41(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_42(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_43(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_44(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_45(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_46(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_47(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_48(features, features_length); votes[_class] += 1;
    _class = clf_duty_tree_49(features, features_length); votes[_class] += 1;
    
        int32_t most_voted_class = -1;
        int32_t most_voted_votes = 0;
        for (int32_t i=0; i<2; i++) {

            if (votes[i] > most_voted_votes) {
                most_voted_class = i;
                most_voted_votes = votes[i];
            }
        }
        return most_voted_class;
    }
    